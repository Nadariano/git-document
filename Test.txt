Hello Git! ☺

***Notes:
1. When a new branch created, a pointer will be stuck onto the latest commit that you're on.
3. The command [git commit -a -m 'xxx'] means that you add all the changes, then commit
4. The command [git log --oneline --decorate --graph --all] print out the history of your commits, showing where your branch pointers are and how your history has diverged.
5. UNDO something:
 5.1. Unstaging a Staged file: [git reset HEAD <file>]: 
   Useful for separating changes into commits. It will remove the selected file from the stage, therefore you can save it for later commits.
 5.2. (DANGEROUS) Unmodifying a Modified file: [git checkout -- <file>]: 
   Any local changes you made to that file are gone, Git just replaced that file with the last staged or committed version.
 5.3. Redo/rename a commit BEFORE pushing: [git commit --amend]:
   This command takes your staging area and uses it for the commit. If you’ve made no changes since
your last commit (for instance, you run this command immediately after your previous commit), then your snapshot will look exactly the same, and all you’ll change is your commit message.
   Only amend commits that are still local and have not been pushed somewhere. Amending previously pushed commits and force pushing the branch will cause problems for your collaborators.